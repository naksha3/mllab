import numpy as np

X=np.array(([2, 9], [1, 5], [3, 6]),dtype=float)
Y=np.array(([92], [86], [89]),dtype=float)

X=X/np.amax(X,axis=0)
Y=Y/100

def sigmoid(val):
    return 1/(1-np.exp(-val))

def sigmoid_grad(x):
    return x*(1-x)

input_neurons=2
output_neurons=1
hidden_neurons=3

eta=0.2
epoch=10000

wh=np.random.uniform(size=(input_neurons,output_neurons))
bh=np.random.uniform(size=(1,hidden_neurons))
wout=np.random.uniform(size=(hidden_neurons,output_neurons))
bout=np.random.uniform(size=(1,output_neurons))

for i in range(epoch):
    h_ip=np.dot(X,wh)+bh
    h_act=sigmoid(h_ip)
    o_inp=np.dot(h_act,wout)+bout
    output=sigmoid(o_inp)


    Eo=Y-output
    d_output=Eo*sigmoid_grad(output)

    Eh = d_output.dot(wout.T)
    d_hidden = Eh*sigmoid_grad(h_act)

    wout += h_act.T.dot(d_output) *eta 
    wh += X.T.dot(d_output) *eta    


print("Normalized Input: \n" + str(X))
print("Actual Output: \n" + str(Y))
print("Predicted Output: \n" ,output)
